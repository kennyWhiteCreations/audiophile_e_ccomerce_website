{"mappings":"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","sources":["src/js/checkout.js"],"sourcesContent":["const emailInput = document.querySelector('#email-address');\r\nconst mainPageBg = document.querySelector('#main-page-bg');\r\nconst payBtn = document.querySelector('#pay-btn');\r\nconst form = document.querySelector('#checkout-form');\r\nconst successModalBackHomeBtn = document.querySelector('#success-modal-home-btn');\r\nconst checkoutHamburgerBtn = document.querySelector('#mobile-menu-btn');\r\nconst checkoutShoppingCart = document.querySelector('#cart-modal');\r\nconst checkoutShoppingCartIcon = document.querySelector('#shopping-cart-link');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction addToSummaryPanel() {\r\n   /*  const summaryPanel = document.createElement('checkout-summary'); */\r\n    const product = localStorage.getItem('products') ? JSON.parse(localStorage.getItem('products')) : [];\r\n  \r\n    const summaryItemsGroup = document.querySelector('#summary-items-flex-group');\r\n    /* const summaryItem = document.createElement('section'); */\r\n    /* summaryItem.setAttribute('data-id', `${product.id}`); */\r\n    /* summaryItem.classList.add('summary-items-flex'); */\r\n    /* console.log(summaryItem.style.display) */\r\n\r\n    for(let i=0; i < product.length; i++) {\r\n    summaryItemsGroup.innerHTML += `<section class=\"summary-items-flex\"><img\r\n    class=\"summary-item-flex\"\r\n    src=\"${product[i].imgSrc}\"\r\n    alt=\"summary-img\"\r\n    srcset=\"\"\r\n  />\r\n  \r\n  <section class=\"summary-item-title-and-price\">\r\n    <p class=\"summary-product-name\">${product[i].productName}</p>\r\n    <p class=\"summary-product-charge-amount\">${product[i].productPrice * product[i].productQuantity}</p>\r\n  </section>\r\n  \r\n  <p class=\"summary-product-count\">x${product[i].productQuantity}</p></section>`;\r\n    }  \r\n  }\r\n  \r\n  \r\n  function addToSummaryPanelPrices() {\r\n    const priceAndLabelGroup = document.querySelector('#price-and-label-flex');\r\n    const summaryChargesAndPrices = document.createElement('section');\r\n    const product = localStorage.getItem('products') ? JSON.parse(localStorage.getItem('products')) : [];\r\n    const total = product.map(product => product.trueProductPrice).reduce((prev, curr) => prev + curr, 0);\r\n    summaryChargesAndPrices.classList.add('charges-and-prices');\r\n  \r\n    priceAndLabelGroup.innerHTML = `<section class=\"charges-and-prices\">\r\n    <p class=\"summary-charges-headings\">Total</p>\r\n    <p class=\"summary-charges-price\" id=\"summary-total-price\">$${total}</p>\r\n  </section>\r\n  <section class=\"charges-and-prices\">\r\n    <p class=\"summary-charges-headings\">Shipping</p>\r\n    <p class=\"summary-charges-price\">$10</p>\r\n  </section>\r\n  <section class=\"charges-and-prices\">\r\n    <p class=\"summary-charges-headings\">VAT</p>\r\n    <p class=\"summary-charges-price\">$120</p>\r\n  </section>\r\n  <section class=\"charges-and-prices\">\r\n    <p class=\"summary-charges-headings\">Grand total</p>\r\n    <p class=\"summary-charges-price\" id=\"summary-grand-total\">$${10 + 120 + total}</p>\r\n  </section>`;\r\n  \r\n  priceAndLabelGroup.appendChild(summaryChargesAndPrices);\r\n  }\r\n\r\n\r\n\r\n/* function eMoneyValidation() {\r\n  let eMoneyInput = document.querySelector('#e-money');\r\n  let eMoneyInputNumber = document.querySelector('#e-money-number');\r\n  let eMoneyInputPin = document.querySelector('#e-money-pin');\r\n\r\n\r\n  if(eMoneyInput.checked) {\r\n    if(eMoneyInputNumber.value.length < 10 || eMoneyInputPin.value.length < 4) {\r\n          eMoneyContainer.style.borderColor = 'red';\r\n      return false\r\n    } else if(eMoneyInputNumber.value.length < 10 && eMoneyInputPin.value.length === 4) {\r\n\r\n    } else {\r\n      eMoneyContainer.style.borderColor = 'green';\r\n      \r\n      return true\r\n    }\r\n  }\r\n\r\n} */\r\n\r\n\r\nfunction hideEMoneyInputs() {\r\n  let eMoneyInputPin = document.querySelector('#e-money-pin');\r\n  let eMoneyInputNumber = document.querySelector('#e-money-number');\r\n  let eMoneyInputNumberLabel = document.querySelector('[for=\"e-money-number\"]');\r\n  let eMoneyInputLabel = document.querySelector('[for=\"e-money-pin\"]');\r\n  let cashOnDeliveryInfo = document.querySelector('#cash-on-delivery-info');\r\n\r\n    eMoneyInputPin.style.display = 'none';\r\n    eMoneyInputNumber.style.display = 'none';\r\n    eMoneyInputNumberLabel.style.display = 'none';\r\n    eMoneyInputLabel.style.display = 'none';\r\n    cashOnDeliveryInfo.style.display = 'none';\r\n  \r\n}\r\n\r\nfunction showOrHideEMoneyInputs() {\r\n  let eMoneyInput = document.querySelector('#e-money');\r\n  let cashOnDeliveryInput = document.querySelector('#cash-on-delivery');\r\n  let eMoneyInputPin = document.querySelector('#e-money-pin');\r\n  let eMoneyInputNumber = document.querySelector('#e-money-number');\r\n  let eMoneyInputNumberLabel = document.querySelector('[for=\"e-money-number\"]');\r\n  let eMoneyInputLabel = document.querySelector('[for=\"e-money-pin\"]');\r\n  let cashOnDeliveryInfo = document.querySelector('#cash-on-delivery-info');\r\n\r\n  if(eMoneyInput.checked) {\r\n\r\n    eMoneyInputPin.style.display = 'block';\r\n    eMoneyInputNumber.style.display = 'block';\r\n    eMoneyInputNumberLabel.style.display = 'block';\r\n    eMoneyInputLabel.style.display = 'block';\r\n    cashOnDeliveryInfo.style.display = 'none';\r\n  } else if(cashOnDeliveryInput.checked) {\r\n    eMoneyInputPin.style.display = 'none';\r\n    eMoneyInputNumber.style.display = 'none';\r\n    eMoneyInputNumberLabel.style.display = 'none';\r\n    eMoneyInputLabel.style.display = 'none';\r\n    cashOnDeliveryInfo.style.display = 'block';\r\n  }\r\n\r\n  \r\n}\r\n\r\nshowOrHideEMoneyInputs();\r\n\r\n\r\nfunction eMoneyInputNumberValidation() {\r\n  let eMoneyInput = document.querySelector('#e-money');\r\n  let eMoneyInputNumber = document.querySelector('#e-money-number');\r\n  \r\n\r\n  if(eMoneyInput.checked) {\r\n    \r\n    if(eMoneyInputNumber.value.length != 10) {\r\n      eMoneyInputNumber.style.borderColor = 'red';\r\n      return false;\r\n    } else {\r\n      eMoneyInputNumber.style.borderColor = 'green';\r\n      return true;\r\n    }\r\n}\r\n}\r\n\r\n\r\n/* figure out whether or not to clear eMoney inputs on cash on delivery selection */\r\n\r\nfunction eMoneyInputPinValidation() {\r\n  let eMoneyInput = document.querySelector('#e-money');\r\n  let eMoneyInputPin = document.querySelector('#e-money-pin');\r\n\r\n  if(eMoneyInput.checked) {\r\n    if(eMoneyInputPin.value.length < 4) {\r\n      eMoneyInputPin.style.borderColor = 'red';\r\n      return false;\r\n    } else {\r\n      eMoneyInputPin.style.borderColor = 'green';\r\n      return true;\r\n    }\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* modal code */\r\n\r\n/* \r\n\r\n\r\n*modal/summary needs*\r\ninput data from product object into success modal\r\nsummary items need to be synced with the cart\r\n\r\n\r\n\r\n*/\r\n\r\nfunction validateEmptyInputs(input) {\r\n  if(input.value === '' || input.value === null) {\r\n    input.style.borderColor = 'red';\r\n    return false\r\n  } else {\r\n    input.style.borderColor = 'green';\r\n    return true\r\n  }\r\n}\r\n\r\n\r\nfunction validateAllInputs() {\r\n\r\n}\r\n\r\n\r\n\r\n function formSubmitValidation() {\r\n  let nameInput = document.querySelector('#name');\r\n  let addressInput = document.querySelector('#address');\r\n  let cityInput = document.querySelector('#city');\r\n  let countryInput = document.querySelector('#country');\r\n  let eMoneyNumberInput = document.querySelector('#e-money');\r\n  let cashOndeliveryInput = document.querySelector('#cash-on-delivery');\r\n\r\nconsole.log(eMoneyNumberInput.checked)\r\n    if(eMoneyNumberInput.checked && validateEmail() && validatePhoneNum() && validateEmptyInputs(nameInput) && validateEmptyInputs(addressInput) && validateEmptyInputs(cityInput) && validateEmptyInputs(countryInput) && zipCodeValidation() && eMoneyInputNumberValidation() && eMoneyInputPinValidation() === true)\r\n      {\r\n      return true\r\n    } else if(cashOndeliveryInput.checked && validateEmail() && validatePhoneNum() && validateEmptyInputs(nameInput) && validateEmptyInputs(addressInput) && validateEmptyInputs(cityInput) && validateEmptyInputs(countryInput) && zipCodeValidation() === true ) {\r\n      return true\r\n    } else {\r\n    return false\r\n  }  \r\n} \r\n\r\n\r\nfunction zipCodeValidation() {\r\n  let zipCodeInput = document.querySelector('#zip-code');\r\n    if(zipCodeInput.value.length != 5) {\r\n      zipCodeInput.style.borderColor = 'red';\r\n      zipCodeInput.value = zipCodeInput.value.slice(0, zipCodeInput.maxLength);\r\n      return false;\r\n    } else {\r\n      zipCodeInput.style.borderColor = 'green';\r\n      return true;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/* form.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  let nameInput = document.querySelector('#name');\r\n  let addressInput = document.querySelector('#address');\r\n  let cityInput = document.querySelector('#city');\r\n  let countryInput = document.querySelector('#country');\r\n  let zipCodeInput = document.querySelector('#zip-code');\r\n  let eMoneyInput = document.querySelector('#e-money');\r\n  let eMoneyPinInput = document.querySelector('#e-money-pin');\r\n  console.log('jgjgj')\r\n}) */\r\n\r\nfunction numberInputValidation(input, maxLength) {\r\n  if (input.value < maxLength || input.value === '' || input.value === null) {\r\n    input.style.borderColor = 'red';\r\n  return false\r\n  } else {\r\n    input.style.borderColor = 'green';\r\n    return true\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction validateEmail() {\r\n   const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n   const emailValidationTest = emailRegex.test(emailInput.value);\r\n   const emailWarningMsg = document.querySelector('#email-warning-msg');\r\n   if (emailValidationTest === true) {\r\n      emailInput.style.borderColor = 'green';\r\n      emailWarningMsg.style.display = 'none';\r\n      return true\r\n   } else {\r\n    \r\n      emailInput.style.borderColor = 'red';\r\n      emailWarningMsg.style.display = 'block';\r\n      return false\r\n   }\r\n \r\n}\r\n\r\n\r\n function validatePhoneNum() {\r\n  const phoneNumInput = document.querySelector('#phone-number');\r\n  const phoneNumRegex = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\r\n  const phoneNumValidationTest = phoneNumRegex.test(phoneNumInput.value);\r\n  if (phoneNumValidationTest === true) {\r\n    phoneNumInput.style.borderColor = 'green';\r\n     return true\r\n  } else {\r\n     \r\n     phoneNumInput.style.borderColor = 'red';\r\n     return false\r\n  }\r\n\r\n}\r\n\r\nfunction AddToSuccessModal() {\r\n  const products = getProductsFromStorage();\r\n  const total = products.map(products => products.trueProductPrice).reduce((prev, curr) => prev + curr, 0);\r\n  const FirstProductCard = document.querySelector('#success-modal-first-item-group');\r\n  const grandTotalContainer = document.querySelector('#grand-total-container');\r\n  FirstProductCard.innerHTML = `<section id=\"success-modal-first-item\">\r\n  <img\r\n    id=\"success-item-img\"\r\n    src=\"${products[0].imgSrc}\"\r\n    alt=\"success-product-image\"\r\n  />\r\n  <section id=\"success-item-title-and-price\">\r\n    <h3 class=\"success-product-name\">${products[0].productName}</h3>\r\n    <p id=\"succces-modal-item-price\">$${products[0].productPrice}</p>\r\n  </section>\r\n  <p id=\"success-item-notification\">x ${products[0].productQuantity}</p>\r\n</section>\r\n<p id=\"success-other-items\">\r\n  and <span id=\"success-other-items-amount\">${products.length - 1}</span> other item(s)\r\n</p>\r\n</section>`;\r\ngrandTotalContainer.innerHTML = `<p id=\"success-grand-total\">Grand total</p>\r\n<p id=\"succces-modal-price\">$${total}</p>`;\r\n  \r\n}\r\n\r\nconst openCheckoutMobileMenu = () => {\r\n  let mobileMenu = document.querySelector('#mobile-menu');\r\n  let navBar = document.querySelector('#top-nav-bar');\r\n  let bodyWrapper = document.querySelector('#body-wrapper');\r\n  let innerWidth = window.innerWidth;\r\n    if(screen.width < screen.height && innerWidth <= 699) {\r\n      mobileMenu.style.display = 'flex';\r\n      mobileMenu.style.flexDirection = 'column';\r\n      console.log(screen.width < screen.height)\r\n      console.log(innerWidth >= 700)\r\n    }  else if(screen.width < screen.height && innerWidth >= 700) {\r\n      mobileMenu.style.display = 'flex';\r\n      mobileMenu.style.flexDirection = 'row';\r\n    } else {\r\n      mobileMenu.style.display = 'flex';\r\n      mobileMenu.style.flexDirection = 'row';\r\n    }\r\n    navBar.classList.add('greyed-out');\r\n    bodyWrapper.classList.add('greyed-out');\r\n    \r\n}\r\n\r\nconst closeCheckoutMobileMenu = () => {\r\n  let mobileMenu = document.querySelector('#mobile-menu');\r\n  let navBar = document.querySelector('#top-nav-bar');\r\n  let bodyWrapper = document.querySelector('#body-wrapper'); \r\n  mobileMenu.style.display = 'none';\r\n    navBar.classList.remove('greyed-out');\r\n     bodyWrapper.classList.remove('greyed-out');\r\n}\r\n\r\n\r\ncheckoutHamburgerBtn.addEventListener('click', function() {\r\n  let mobileMenu = document.querySelector('#mobile-menu');\r\n  if(mobileMenu.style.display === 'none') {\r\n      openCheckoutMobileMenu();\r\n  } else {\r\n      closeCheckoutMobileMenu();\r\n  }\r\n})\r\n\r\n\r\nfunction openShoppingCartOnCheckoutPage(e) {\r\n  e.preventDefault();\r\n    let navBar = document.querySelector('#top-nav-bar');\r\n    let bodyWrapper = document.querySelector('#body-wrapper');\r\n  if(checkoutShoppingCart.classList.contains('closed-cart')) {\r\n  checkoutShoppingCart.classList.replace('closed-cart', 'open-cart');\r\n      navBar.classList.add('greyed-out');\r\n      bodyWrapper.classList.add('greyed-out');\r\n      } else if(checkoutShoppingCart.classList.contains('open-cart')) {\r\n      checkoutShoppingCart.classList.replace('open-cart', 'closed-cart');\r\n      navBar.classList.remove('greyed-out');\r\n      bodyWrapper.classList.remove('greyed-out');            \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nfunction openSuccessModal() {\r\n   const successModal = document.querySelector('#success-modal');\r\n   let form = document.querySelector('#checkout-form');\r\n   successModal.classList.replace('closed-modal', 'open-modal');\r\n   form.classList.add('greyed-out');\r\n   AddToSuccessModal();\r\n}\r\n\r\nfunction deleteProductAfterPurchase(){\r\n  let cartItems = document.querySelectorAll('.cart-item-flex');\r\n  if(successModalBackHomeBtn){\r\n    for(i=0; i < cartItems.length; i++) {\r\n      cartItems[i].remove();\r\n    }\r\n      localStorage.removeItem('products') // this removes from the DOM only\r\n  } /* else if(e.target.tagName === \"I\"){\r\n      cartItem = e.target.parentElement.parentElement;\r\n      cartItem.remove(); // this removes from the DOM only\r\n  } */\r\n\r\n  let products = getProductsFromStorage();\r\n  let updatedProducts = products.filter(product => {\r\n      return product.id !== parseInt(cartItems.dataset.id);\r\n  });\r\n  localStorage.setItem('products', JSON.stringify(updatedProducts)); // updating the product list after the deletion\r\n  updateCartInfo(); \r\n}\r\n\r\nfunction findCartInfo() {\r\n  let products = getProductsFromStorage();\r\n  /* productTotalPrice(products); */\r\n  console.table(products)\r\n /*  let total = products.reduce((accumulator, products) => {\r\n  return accumulator += products.trueProductPrice;\r\n}, 0);\r\n  console.log(total) */\r\n \r\n  const total = products.map(products => products.trueProductPrice).reduce((prev, curr) => prev + curr, 0);\r\n\r\n\r\n    return{\r\n       total: total,\r\n      productCount: products.length \r\n    }\r\n}\r\n\r\n\r\nfunction updateCartInfo(){\r\n  let cartInfo = findCartInfo();\r\n  /* productTotalPrice(cartInfo) */\r\n  if(cartInfo.productCount === '' || cartInfo.productCount === null) {\r\n    return\r\n  } else {\r\n  cartItemCount.textContent = cartInfo.productCount;\r\n cartTotalPrice.textContent = cartInfo.total \r\n  }\r\n}\r\n\r\n\r\nfunction loadCart(){\r\n  let products = getProductsFromStorage();\r\n  \r\n  if(products.length < 1){\r\n      cartItemID = 1;\r\n      return\r\n  } else {\r\n      cartItemID = products[products.length - 1].id;\r\n      cartItemID++;\r\n      \r\n  }\r\n  products.forEach(product => addToCartList(product));\r\n\r\n  // calculate and update UI of cart info \r\n  updateCartInfo();\r\n}\r\n\r\n\r\n\r\nsuccessModalBackHomeBtn.addEventListener('click', (e)=> {\r\n  // Get url from the target element (<a>) href attribute\r\n  let url = e.target.href;\r\n  \r\n  e.preventDefault();\r\n  deleteProductAfterPurchase()\r\n  // Open the url in the current window. Set to \"_blank\" instead of \"_self\" to open in a new window.\r\n  loadCart()\r\n  window.open(url, '_self');\r\n} )\r\n\r\n\r\n form.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  console.assert(formSubmitValidation())\r\n  if(formSubmitValidation() === false) {\r\n    return \r\n  } else {\r\n    openSuccessModal();\r\n    return true\r\n  }\r\n}); \r\n\r\n\r\n\r\n  \r\ncheckoutShoppingCartIcon.addEventListener('click', openShoppingCartOnCheckoutPage);\r\naddToSummaryPanel();\r\naddToSummaryPanelPrices();"],"names":["emailInput","document","querySelector","mainPageBg","payBtn","form","successModalBackHomeBtn","checkoutHamburgerBtn","checkoutShoppingCart","checkoutShoppingCartIcon","addToSummaryPanel","product","localStorage","getItem","JSON","parse","summaryItemsGroup","i1","length","innerHTML","imgSrc","productName","productPrice","productQuantity","addToSummaryPanelPrices","priceAndLabelGroup","summaryChargesAndPrices","createElement","total","map","trueProductPrice","reduce","prev","curr","classList","add","appendChild","hideEMoneyInputs","eMoneyInputPin","eMoneyInputNumber","eMoneyInputNumberLabel","eMoneyInputLabel","cashOnDeliveryInfo","style","display","showOrHideEMoneyInputs","eMoneyInput","cashOnDeliveryInput","checked","eMoneyInputNumberValidation","value","borderColor","eMoneyInputPinValidation","validateEmptyInputs","input","validateAllInputs","formSubmitValidation","nameInput","addressInput","cityInput","countryInput","eMoneyNumberInput","cashOndeliveryInput","console","log","validateEmail","validatePhoneNum","zipCodeValidation","zipCodeInput","slice","maxLength","numberInputValidation","emailValidationTest","test","emailWarningMsg","phoneNumInput","AddToSuccessModal","products","getProductsFromStorage","FirstProductCard","grandTotalContainer","mobileMenu","navBar","bodyWrapper","innerWidth","window","screen","width","height","flexDirection","closeCheckoutMobileMenu","remove","openShoppingCartOnCheckoutPage","e","preventDefault","contains","addEventListener","openCheckoutMobileMenu"],"version":3,"file":"checkout.875dde0b.js.map"}